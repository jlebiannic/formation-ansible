---
## Play load balancer

- hosts: petclinic_loadbalancer_servers
  tasks:
# Install Nginx - module apt ou package
    - name: Install Nginx
      become: true
      package:
        name: nginx

    - name: Nginx as a Service
      become: true
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: true

    - name: Nginx Configuration
      become: true
      ansible.builtin.copy:
       src: nginx-petclinic.conf 
       dest: /etc/nginx/sites-available/petclinic.conf

    - name: Validate nginx configuration
      become: true
      ansible.builtin.command:
        cmd: nginx -t
      register: result
    - debug: msg="result={{result.rc}}"
        

    - name: Enable petclinic site to be served by nginx (make a link)
      become: true
      ansible.builtin.file:
        src: /etc/nginx/sites-available/petclinic.conf
        dest: /etc/nginx/sites-enabled/petclinic.conf
        state: link        

    - name: Force nginx conf reload
      become: true
      ansible.builtin.service:
        name: nginx
        state: reloaded

## Play database
## (attention, situation specifique : ssh n'est pas actif sur le serveur de BDD)
- hosts: petclinic_database_servers
  name: Setup petclinic env
  gather_facts: false
  connection: local
  tasks:
    # Creation de l'utilisateur et de la BDD petclinic directement en plsql
    # via la machine ansible (cf connection: local)
    # en pr√©cisant la machine portant la bdd (cf login_host: bdddev01, login_user: postgres, login_password: postgres)
    - name: Create petclinic user
      community.postgresql.postgresql_user:
        name: petclinic
        password: petclinic
        encrypted: true
        port: 5432
        state: present
        login_host: bdddev01
        login_user: postgres
        login_password: postgres

    - name: Create petclinic database
      community.postgresql.postgresql_db:
        name: petclinic
        encoding: "UTF-8"
        owner: petclinic
        port: 5432
        state: present
        login_host: bdddev01
        login_user: postgres
        login_password: postgres

## Play application petclinic
- hosts: petclinic_application_servers
  tasks:
    - name: Install openjdk-17-jdk
      become: true
      apt:
        name: openjdk-17-jdk
        state: present
    
    - name: Creates binaries directory
      become: true
      ansible.builtin.file:
        path: /apps/petclinic/binaries
        state: directory

    - name: Creates scripts directory
      become: true    
      ansible.builtin.file:
        path: /apps/petclinic/scripts
        state: directory

    - name: Copy binary for petclinic
      become: true
      ansible.builtin.copy:
       src: /home/ansible/petclinic/binaries/ 
       dest: /apps/petclinic/binaries/

    - name: Copy start-petclinic-inmemory-db.sh
      become: true
      ansible.builtin.copy:
       src: /home/ansible/workspace/start-petclinic-inmemory-db.sh
       dest: /apps/petclinic/scripts/

    - name: Copy start-petclinic-postgresql-db.sh
      become: true
      ansible.builtin.copy:
       src: /home/ansible/workspace/start-petclinic-postgresql-db.sh
       dest: /apps/petclinic/scripts/    

    - name: Copy stop-petclinic.sh
      become: true
      ansible.builtin.copy:
       src: /home/ansible/workspace/stop-petclinic.sh
       dest: /apps/petclinic/scripts/             


